{"version":3,"sources":["Components/Notes/Note.module.css","Components/Notes/NewOrEditForm.module.css","UI/Modal.module.css","Components/Header/Header.module.css","Components/Notes/NotesList.module.css","store/note-context.js","Components/Header/Header.js","Components/Notes/Note.js","Components/Notes/NotesList.js","UI/Modal.js","Components/Notes/NewOrEditForm.js","Components/Notes/NewOrEditNote.js","App.js","index.js"],"names":["module","exports","NoteContext","React","createContext","dummyNotes","newNote","editingNote","editingId","updateEditingId","currentEditNote","finishedSwap","setFinishedSwap","showNewNote","hideNewNote","showEditingNote","hideEditingNote","currentlyEditingNote","addNewNote","deleteNote","editNote","swappingNotes","AddingWhileSelected","setAddingWhileSelected","noteId","setNoteId","titleInput","setTitleInput","textInput","setTextInput","noteSubmit","noteTitleChange","noteTextChange","NoteContextProvider","props","useState","id","title","text","setDummyNotes","newNoteIsShown","setNewNoteIsShown","EditingNoteIsShown","setEditingNoteIsShown","setEditingId","currentEditingObject","setCurrentEditingObject","hideNewNoteHandler","hideEditingNoteHandler","addNewNoteHandler","updatedNotes","concat","editNoteHandler","editedNote","map","elem","Provider","value","length","newNotes","filter","note","event","preventDefault","trim","addingNote","toString","target","handleSwap","tempId","children","Header","ctx","useContext","className","css","header","button","onClick","Note","selected","setIsSelected","noteClass","highlightedNote","useEffect","currentObject","push","selectingHandler","buttons","stopPropagation","NoteList","notesList","tips","NotesList","Backdrop","classes","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","NewOrEditForm","form","onSubmit","type","onChange","placeholder","NewOrEditNote","App","render"],"mappings":"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","file":"static/js/main.0e5d0c09.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__1LpRj\",\"highlightedNote\":\"Note_highlightedNote__1D5Pz\",\"title\":\"Note_title__u_LNc\",\"text\":\"Note_text__s9SrT\",\"buttons\":\"Note_buttons__2QsEQ\",\"button\":\"Note_button__1Lcn-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewOrEditForm_form__9t22c\",\"buttons\":\"NewOrEditForm_buttons__KKXkB\",\"button\":\"NewOrEditForm_button__zR7MU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2WxzE\",\"modal\":\"Modal_modal__2rnV-\",\"slide-down\":\"Modal_slide-down__3M_vL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2o8OU\",\"button\":\"Header_button__DTJGD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotesList\":\"NotesList_NotesList__Obw9_\",\"tips\":\"NotesList_tips__3Gp0y\"};","import React, { useState } from 'react';\r\n\r\nconst NoteContext = React.createContext({\r\n    dummyNotes: [],\r\n    newNote: false,\r\n    editingNote: false,\r\n    editingId: '',\r\n    updateEditingId: () => {},\r\n    currentEditNote: {},\r\n    finishedSwap: false,\r\n    setFinishedSwap: ()=> {},\r\n    \r\n    showNewNote: () => {},\r\n    hideNewNote: () => {},\r\n\r\n    showEditingNote: () => {},\r\n    hideEditingNote: () => {},\r\n    currentlyEditingNote: () => {},\r\n\r\n    addNewNote: () => {},\r\n    deleteNote: () => {},\r\n    editNote: () => {},\r\n    swappingNotes: {},\r\n    AddingWhileSelected: false,\r\n    setAddingWhileSelected: () => {},\r\n\r\n    noteId: 1,\r\n    setNoteId: () => {},\r\n    titleInput: '',\r\n    setTitleInput: () => {},\r\n    textInput: '',\r\n    setTextInput: () => {},\r\n    noteSubmit: () => {},\r\n    noteTitleChange: () => {},\r\n    noteTextChange: () => {}\r\n})\r\n\r\nexport const NoteContextProvider = (props) => {\r\n\tconst [dummyNotes, setDummyNotes] = useState([\r\n\t\t{\r\n\t\t\tid: '0',\r\n\t\t\ttitle: 'New Note',\r\n\t\t\ttext: 'Add a New Note to Begin!'\r\n\t\t},\r\n        {\r\n\t\t\tid: '1',\r\n\t\t\ttitle: 'Nesfsfsfsfe',\r\n\t\t\ttext: 'Adsfsfsf Begin!'\r\n\t\t}\r\n\t]);\r\n    const [newNoteIsShown, setNewNoteIsShown] = useState(false);\r\n    const [EditingNoteIsShown, setEditingNoteIsShown] = useState(false);\r\n    const [editingId, setEditingId] = useState('');\r\n    const [currentEditingObject, setCurrentEditingObject] = useState({id: '', title: '', text: ''});\r\n    const [AddingWhileSelected, setAddingWhileSelected] = useState(false);\r\n/****************************************** */\r\n    const [noteId, setNoteId] = useState(2);\r\n    const [titleInput, setTitleInput] = useState('');\r\n    const [textInput, setTextInput] = useState('');\r\n\r\n    let swappingNotes = [];\r\n    const [finishedSwap, setFinishedSwap] = useState(false);\r\n\r\n    const showNewNoteHandler = () => {\r\n        if (swappingNotes.length > 0) {\r\n            setAddingWhileSelected(!AddingWhileSelected);\r\n        }\r\n        setNewNoteIsShown(true);\r\n      }\r\n    \r\n    const hideNewNoteHandler = () => {\r\n        setNewNoteIsShown(false);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const showEditingNoteHandler = () => {\r\n        setEditingNoteIsShown(true);\r\n    }\r\n    \r\n    const hideEditingNoteHandler = () => {\r\n        setEditingNoteIsShown(false);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const currentEditingObjectHandler = (props) => {\r\n        setCurrentEditingObject(props)\r\n    }\r\n    const addNewNoteHandler = (newNote) => {\r\n        const updatedNotes = newNote.concat(dummyNotes);\r\n        setDummyNotes(updatedNotes);\r\n    };\r\n\r\n    const deleteNoteHandler = (id) => {\r\n        const newNotes = dummyNotes.filter((note) => (note.id !== id));\r\n    setDummyNotes(newNotes);\r\n    };\r\n\r\n    const editNoteHandler = (editedNote) => {\r\n        const updatedNotes = dummyNotes.map((elem) => \r\n           editedNote.id === elem.id ? editedNote : elem\r\n        );\r\n        setEditingId('')\r\n        setDummyNotes(updatedNotes);\r\n    }\r\n\r\n    const idHandler = () => setNoteId(noteId+1);\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (textInput.trim().length > 0){\r\n\r\n            if (newNoteIsShown) {\r\n                idHandler();\r\n\r\n                const addingNote = {\r\n                    id: noteId.toString(),\r\n                    title: titleInput,\r\n                    text: textInput\r\n                }\r\n                addNewNoteHandler([addingNote])\r\n                hideNewNoteHandler();\r\n            } else if (EditingNoteIsShown) {\r\n                \r\n                const addingNote = {\r\n                    id: editingId,\r\n                    title: titleInput,\r\n                    text: textInput\r\n                }\r\n\r\n                editNoteHandler(addingNote);\r\n                hideEditingNoteHandler();\r\n            }\r\n            setTitleInput('');\r\n            setTextInput('');\r\n        } \r\n\r\n    }\r\n    const titleChangeHandler = (event) => {\r\n        setTitleInput(event.target.value);\r\n    }\r\n    const textChangeHandler = (event) => {\r\n        if (event.target.value.length <= 255) {\r\n            setTextInput(event.target.value);\r\n        } \r\n    }\r\n    const swapHandler = () => {\r\n        let tempId = swappingNotes[0].id;\r\n        swappingNotes[0].id = swappingNotes[1].id;\r\n        swappingNotes[1].id = tempId;\r\n        const updatedNotes = dummyNotes.map((elem) => \r\n            swappingNotes[0].id === elem.id ? \r\n            swappingNotes[0] : \r\n            swappingNotes[1].id === elem.id ? \r\n            swappingNotes[1] : \r\n            elem\r\n        );\r\n        setDummyNotes(updatedNotes);\r\n        setFinishedSwap(true); //neveer sets it to false\r\n        swappingNotes=[];\r\n    }\r\n\r\n    return (\r\n        <NoteContext.Provider value={{\r\n            dummyNotes: dummyNotes,\r\n            newNote: newNoteIsShown,\r\n            editingNote: EditingNoteIsShown,\r\n            editingId: editingId,\r\n            updateEditingId: setEditingId,\r\n            currentEditNote: currentEditingObject,\r\n            finishedSwap: finishedSwap,\r\n            setFinishedSwap: setFinishedSwap,\r\n\r\n            showNewNote: showNewNoteHandler,\r\n            hideNewNote: hideNewNoteHandler,\r\n\r\n            showEditingNote: showEditingNoteHandler,\r\n            hideEditingNote: hideEditingNoteHandler,\r\n            currentlyEditingNote: currentEditingObjectHandler,\r\n\r\n            addNewNote: addNewNoteHandler,\r\n            deleteNote: deleteNoteHandler,\r\n            editNote: editNoteHandler,\r\n            swappingNotes: swappingNotes,\r\n            AddingWhileSelected: AddingWhileSelected,\r\n            setAddingWhileSelected: setAddingWhileSelected,\r\n\r\n            noteId: noteId,\r\n            setNoteId: setNoteId,\r\n            titleInput: titleInput,\r\n            setTitleInput: setTitleInput,\r\n            textInput: textInput,\r\n            setTextInput: setTextInput,\r\n            noteSubmit: submitHandler,\r\n            noteTitleChange: titleChangeHandler,\r\n            noteTextChange: textChangeHandler,\r\n            handleSwap: swapHandler\r\n        }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    );\r\n}\r\n\r\nexport default NoteContext;","import React, { useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n\tconst ctx = useContext(NoteContext);\r\n\treturn (\r\n\t\t<header className={css.header}>\r\n\t\t\t<h2>AppendNotes</h2>\r\n\t\t\t<button className={css.button} onClick={ctx.showNewNote}>Add Note</button>\r\n\t\t</header>\r\n\r\n\t);\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect, useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './Note.module.css';\r\n\r\nconst Note = props => {\r\n\tconst ctx = useContext(NoteContext);\r\n\r\n\tconst [selected, setIsSelected] = useState(false);\r\n\tconst noteClass = `${css.note} ${selected ? css.highlightedNote : ''}`;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (ctx.finishedSwap) {\r\n\t\t\tsetIsSelected(false);\r\n\t\t}\r\n\t\tif (ctx.AddingWhileSelected) {\r\n\t\t\tsetIsSelected(false);\r\n\t\t}\r\n\t// ctx.setFinishedSwap(false);\r\n\t},[ctx.finishedSwap, ctx.handleSwap, ctx.AddingWhileSelected]);\r\n\r\n\tconst editingHandler = () => {\r\n\t\tctx.showEditingNote();\r\n\t\tctx.currentlyEditingNote(props);\r\n\t\tctx.setTitleInput(props.title);\r\n\t\tctx.setTextInput(props.text);\r\n\t}\r\n\r\n\tconst deleteNoteHandler = (event) => {\r\n\t\tevent.stopPropagation();\r\n\t\tctx.deleteNote(props.id)\r\n\t}\r\n\r\n\tconst selectingHandler = (props) => {\r\n\t\tconst currentObject = {\r\n\t\t\tid: props.id,\r\n\t\t\ttitle: props.title,\r\n\t\t\ttext: props.text\r\n\t\t}\r\n\t\tsetIsSelected(!selected);\r\n\t\t\r\n\t\tif (ctx.swappingNotes.length < 2) {\r\n\t\t\tctx.swappingNotes.push(currentObject);\r\n\t\t\tif (ctx.swappingNotes.length === 2) {\r\n\t\t\t\tctx.handleSwap();\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li className={noteClass} onClick={()=>selectingHandler(props)}>\r\n\t\t\t\t<h3 className={css.title}> {props.title} </h3>\r\n\t\t\t\t<p className={css.text}>\t{props.text} </p>\r\n\t\t\t\t<div className={css.buttons}>\r\n\t\t\t\t\t<button className={css.button} onClick={editingHandler}>Edit</button>\r\n\t\t\t\t\t<button className={css.button} onClick={deleteNoteHandler}>Delete</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</li>\r\n\t\t</>\t\t\r\n\t)\r\n};\r\n\r\nexport default Note;","import React, { useContext } from 'react';\r\nimport Note from './Note';\r\n\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './NotesList.module.css';\r\n\r\nconst NoteList = () => {\r\n\r\n\tconst ctx = useContext(NoteContext);\r\n\r\n\tconst notesList = ctx.dummyNotes.map((note)=> (\r\n\t\t<Note \r\n\t\t\tid={note.id} \r\n\t\t\tkey={note.id} \r\n\t\t\ttitle={note.title} \r\n\t\t\ttext={note.text}\r\n\t\t/>\r\n\t));\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<p className={css.tips}>* Click the Add Note button to create a new note. Click two notes to swap them! *</p>\r\n\t\t\t<div className={css.NotesList}>\r\n\t\t\t\t{notesList}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default NoteList;","import React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from '../UI/Modal.module.css';\r\nimport NoteContext from '../store/note-context';\r\n\r\nconst Backdrop = props => {\r\n    return <div className={classes.backdrop} onClick={props.onClose} />\r\n};\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = props => {\r\n    const ctx = useContext(NoteContext);\r\n    return (\r\n        <>\r\n            {ReactDOM.createPortal(<Backdrop onClose={ctx.editingNote ? ctx.hideEditingNote : ctx.hideNewNote} />, portalElement)}\r\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,portalElement)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\nimport css from './NewOrEditForm.module.css';\r\n\r\nconst NewOrEditForm = props => {\r\n    const ctx = useContext(NoteContext);\r\n\r\n    useEffect(() =>{\r\n        ctx.updateEditingId(props.id);\r\n    }, [ctx, props.id])\r\n\r\n    return (\r\n        <>\r\n            <form className={css.form} onSubmit={ctx.noteSubmit} id=\"noteForm\">\r\n            <label>Title:    </label>\r\n            <input type=\"text\" \r\n                value={ctx.titleInput} \r\n                onChange={ctx.noteTitleChange}\r\n            />\r\n            <br />\r\n            <textarea \r\n                placeholder={!ctx.editingNote ? 'Enter a note... (upto 255 characters)' : null }\r\n                value={ctx.textInput} \r\n                onChange={ctx.noteTextChange}\r\n            />\r\n        </form>\r\n        <div className={css.buttons}>\r\n            <button className={css.button} onClick={ctx.editingNote ? ctx.hideEditingNote : ctx.hideNewNote}>Close</button>\r\n            <button className={css.button} type=\"submit\" value=\"submit\" form=\"noteForm\">Add</button>\r\n        </div>\r\n\r\n    </>\r\n    );\r\n};\r\nexport default NewOrEditForm;","import React  from 'react';\r\nimport Modal from '../../UI/Modal';\r\nimport NewOrEditForm from './NewOrEditForm';\r\n\r\nconst NewOrEditNote = (props) => {\r\n\r\n\treturn (\r\n        <Modal>\r\n            <NewOrEditForm id={props.id}/>\r\n        </Modal>\r\n\t);\r\n};\r\n\r\nexport default NewOrEditNote;","import React, { useContext } from 'react';\nimport Header from './Components/Header/Header';\nimport NotesList from './Components/Notes/NotesList';\nimport NewOrEditNote from './Components/Notes/NewOrEditNote';\nimport NoteContext from './store/note-context';\n\nconst App = () => {\n  const ctx = useContext(NoteContext);\n  const editingNote = ctx.currentEditNote;\n\n  return (\n    <>\n      {ctx.newNote && <NewOrEditNote />}\n      {ctx.editingNote && <NewOrEditNote id={editingNote.id} />}\n      <Header />\n      <NotesList />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { NoteContextProvider } from './store/note-context';\n\nReactDOM.render(\n    <NoteContextProvider>\n        <App />\n    </NoteContextProvider >, \n    document.getElementById('root'));\n"],"sourceRoot":""}