{"version":3,"sources":["Components/Notes/Note.module.css","Components/Notes/NewOrEditForm.module.css","UI/Modal.module.css","Components/Header/Header.module.css","Components/Notes/NotesList.module.css","store/note-context.js","Components/Header/Header.js","Components/Notes/Note.js","Components/Notes/NotesList.js","UI/Modal.js","Components/Notes/NewOrEditForm.js","Components/Notes/NewNote.js","App.js","index.js"],"names":["module","exports","NoteContext","React","createContext","dummyNotes","newNote","editingNote","editingId","updateEditingId","currentEditNote","finishedSwap","showNewNote","hideNewNote","showEditingNote","hideEditingNote","currentlyEditingNote","addNewNote","deleteNote","editNote","swappingNotes","noteId","setNoteId","titleInput","setTitleInput","textInput","setTextInput","noteSubmit","noteTitleChange","noteTextChange","NoteContextProvider","props","useState","id","title","text","setDummyNotes","newNoteIsShown","setNewNoteIsShown","EditingNoteIsShown","setEditingNoteIsShown","setEditingId","currentEditingObject","setCurrentEditingObject","setFinishedSwap","hideNewNoteHandler","hideEditingNoteHandler","addNewNoteHandler","updatedNotes","concat","editNoteHandler","editedNote","map","elem","Provider","value","newNotes","filter","note","event","preventDefault","trim","length","addingNote","toString","target","handleSwap","tempId","children","Header","ctx","useContext","className","css","header","button","onClick","Note","selected","setIsSelected","noteClass","highlightedNote","useEffect","currentObject","push","selectingHandler","tabIndex","buttons","editingHandler","NoteList","notesList","tips","NotesList","Backdrop","classes","backdrop","onClose","ModalOverlay","modal","content","portalElement","document","getElementById","Modal","ReactDOM","createPortal","NewOrEditForm","form","onSubmit","type","onChange","placeholder","NewNote","App","render"],"mappings":"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","file":"static/js/main.ff7dd491.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"note\":\"Note_note__bwuxy\",\"highlightedNote\":\"Note_highlightedNote__10ygf\",\"title\":\"Note_title__3YrU7\",\"text\":\"Note_text__2fsEk\",\"buttons\":\"Note_buttons__Z1hwp\",\"button\":\"Note_button__17qe9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewOrEditForm_form__19iiP\",\"buttons\":\"NewOrEditForm_buttons__2Ld8H\",\"button\":\"NewOrEditForm_button__3iVoo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__2hg6k\",\"modal\":\"Modal_modal__MrLBt\",\"slide-down\":\"Modal_slide-down__2aCnl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3Uv6Y\",\"button\":\"Header_button__2zQpv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"NotesList\":\"NotesList_NotesList__279Ka\",\"tips\":\"NotesList_tips__1Arxi\"};","import React, { useState } from 'react';\r\n\r\nconst NoteContext = React.createContext({\r\n    dummyNotes: [],\r\n    newNote: false,\r\n    editingNote: false,\r\n    editingId: '',\r\n    updateEditingId: () => {},\r\n    currentEditNote: {},\r\n    finishedSwap: false,\r\n    \r\n    showNewNote: () => {},\r\n    hideNewNote: () => {},\r\n\r\n    showEditingNote: () => {},\r\n    hideEditingNote: () => {},\r\n    currentlyEditingNote: () => {},\r\n\r\n    addNewNote: () => {},\r\n    deleteNote: () => {},\r\n    editNote: () => {},\r\n    swappingNotes: {},\r\n    // setSwappingNotes: () => {},\r\n\r\n    noteId: 1,\r\n    setNoteId: () => {},\r\n    titleInput: '',\r\n    setTitleInput: () => {},\r\n    textInput: '',\r\n    setTextInput: () => {},\r\n    noteSubmit: () => {},\r\n    noteTitleChange: () => {},\r\n    noteTextChange: () => {}\r\n})\r\n\r\nexport const NoteContextProvider = (props) => {\r\n\tconst [dummyNotes, setDummyNotes] = useState([\r\n\t\t{\r\n\t\t\tid: '0',\r\n\t\t\ttitle: 'New Note',\r\n\t\t\ttext: 'Add a New Note to Begin!'\r\n\t\t},\r\n        {\r\n\t\t\tid: '1',\r\n\t\t\ttitle: 'Nesfsfsfsfe',\r\n\t\t\ttext: 'Adsfsfsf Begin!'\r\n\t\t}\r\n\t]);\r\n    const [newNoteIsShown, setNewNoteIsShown] = useState(false);\r\n    const [EditingNoteIsShown, setEditingNoteIsShown] = useState(false);\r\n    const [editingId, setEditingId] = useState('');\r\n    const [currentEditingObject, setCurrentEditingObject] = useState({id: '', title: '', text: ''});\r\n/****************************************** */\r\n    const [noteId, setNoteId] = useState(2);\r\n    const [titleInput, setTitleInput] = useState('');\r\n    const [textInput, setTextInput] = useState('');\r\n\r\n    // const [swappingNotes, setSwappingNotes] = useState({});\r\n    let swappingNotes = [];\r\n    const [finishedSwap, setFinishedSwap] = useState(false);\r\n\r\n    const showNewNoteHandler = () => {\r\n        setNewNoteIsShown(true);\r\n      }\r\n    \r\n    const hideNewNoteHandler = () => {\r\n        setNewNoteIsShown(false);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const showEditingNoteHandler = () => {\r\n        setEditingNoteIsShown(true);\r\n    }\r\n    \r\n    const hideEditingNoteHandler = () => {\r\n        setEditingNoteIsShown(false);\r\n        setTitleInput('');\r\n        setTextInput('');\r\n    }\r\n\r\n    const currentEditingObjectHandler = (props) => {\r\n        setCurrentEditingObject(props)\r\n    }\r\n    const addNewNoteHandler = (newNote) => {\r\n        const updatedNotes = newNote.concat(dummyNotes);\r\n        setDummyNotes(updatedNotes);\r\n    };\r\n\r\n    const deleteNoteHandler = (id) => {\r\n        const newNotes = dummyNotes.filter((note) => (note.id !== id));\r\n    setDummyNotes(newNotes);\r\n    };\r\n\r\n    const editNoteHandler = (editedNote) => {\r\n        const updatedNotes = dummyNotes.map((elem) => \r\n           editedNote.id === elem.id ? editedNote : elem\r\n        );\r\n        setEditingId('')\r\n        setDummyNotes(updatedNotes);\r\n    }\r\n\r\n    const idHandler = () => setNoteId(noteId+1);\r\n\r\n    const submitHandler = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (textInput.trim().length > 0){\r\n\r\n            if (newNoteIsShown) {\r\n                idHandler();\r\n\r\n                const addingNote = {\r\n                    id: noteId.toString(),\r\n                    title: titleInput,\r\n                    text: textInput\r\n                }\r\n                addNewNoteHandler([addingNote])\r\n                hideNewNoteHandler();\r\n            } else if (EditingNoteIsShown) {\r\n                \r\n                const addingNote = {\r\n                    id: editingId,\r\n                    title: titleInput,\r\n                    text: textInput\r\n                }\r\n\r\n                editNoteHandler(addingNote);\r\n                hideEditingNoteHandler();\r\n            }\r\n            setTitleInput('');\r\n            setTextInput('');\r\n        } \r\n\r\n    }\r\n    const titleChangeHandler = (event) => {\r\n        setTitleInput(event.target.value);\r\n    }\r\n    const textChangeHandler = (event) => {\r\n        if (event.target.value.length <= 255) {\r\n            setTextInput(event.target.value);\r\n        } \r\n    }\r\n    const swapHandler = () => {\r\n        let tempId = swappingNotes[0].id;\r\n        swappingNotes[0].id = swappingNotes[1].id;\r\n        swappingNotes[1].id = tempId;\r\n        const updatedNotes = dummyNotes.map((elem) => \r\n            swappingNotes[0].id === elem.id ? \r\n            swappingNotes[0] : \r\n            swappingNotes[1].id === elem.id ? \r\n            swappingNotes[1] : \r\n            elem\r\n        );\r\n        setDummyNotes(updatedNotes);\r\n        setFinishedSwap(true);\r\n        swappingNotes=[];\r\n    }\r\n\r\n    return (\r\n        <NoteContext.Provider value={{\r\n            dummyNotes: dummyNotes,\r\n            newNote: newNoteIsShown,\r\n            editingNote: EditingNoteIsShown,\r\n            editingId: editingId,\r\n            updateEditingId: setEditingId,\r\n            currentEditNote: currentEditingObject,\r\n            finishedSwap: finishedSwap,\r\n\r\n            showNewNote: showNewNoteHandler,\r\n            hideNewNote: hideNewNoteHandler,\r\n\r\n            showEditingNote: showEditingNoteHandler,\r\n            hideEditingNote: hideEditingNoteHandler,\r\n            currentlyEditingNote: currentEditingObjectHandler,\r\n\r\n            addNewNote: addNewNoteHandler,\r\n            deleteNote: deleteNoteHandler,\r\n            editNote: editNoteHandler,\r\n            swappingNotes: swappingNotes,\r\n            // setSwappingNotes: setSwappingNotes,\r\n\r\n            noteId: noteId,\r\n            setNoteId: setNoteId,\r\n            titleInput: titleInput,\r\n            setTitleInput: setTitleInput,\r\n            textInput: textInput,\r\n            setTextInput: setTextInput,\r\n            noteSubmit: submitHandler,\r\n            noteTitleChange: titleChangeHandler,\r\n            noteTextChange: textChangeHandler,\r\n            handleSwap: swapHandler\r\n        }}>\r\n            {props.children}\r\n        </NoteContext.Provider>\r\n    );\r\n}\r\n\r\nexport default NoteContext;","import React, { useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './Header.module.css';\r\n\r\nconst Header = () => {\r\n\r\n\tconst ctx = useContext(NoteContext);\r\n\treturn (\r\n\t\t<header className={css.header}>\r\n\t\t\t<h2>AppendNotes</h2>\r\n\t\t\t<button className={css.button} onClick={ctx.showNewNote}>Add Note</button>\r\n\t\t</header>\r\n\r\n\t);\r\n};\r\n\r\nexport default Header;","import React, { useState, useEffect, useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './Note.module.css';\r\n\r\nconst Note = props => {\r\n\tconst ctx = useContext(NoteContext);\r\n\r\n\tconst [selected, setIsSelected] = useState(false);\r\n\tconst noteClass = `${css.note} ${selected ? css.highlightedNote : ''}`;\r\n\t\r\n\tuseEffect(() => {\r\n\t\tif (ctx.finishedSwap) {\r\n\t\t\tsetIsSelected(false);\r\n\t\t}\r\n\t},[ctx.finishedSwap, ctx.handleSwap]);\r\n\t\r\n\tconst editingHandler = props => {\r\n\t\tctx.showEditingNote();\r\n\t\tctx.currentlyEditingNote(props);\r\n\t\tctx.setTitleInput(props.title);\r\n\t\tctx.setTextInput(props.text);\r\n\t}\r\n\r\n\tconst selectingHandler = (props) => {\r\n\r\n\t\tconst currentObject = {\r\n\t\t\tid: props.id,\r\n\t\t\ttitle: props.title,\r\n\t\t\ttext: props.text\r\n\t\t}\r\n\t\tsetIsSelected(!selected);\r\n\t\t\r\n\t\tif (ctx.swappingNotes.length < 2) {\r\n\t\t\tctx.swappingNotes.push(currentObject);\r\n\t\t\tif (ctx.swappingNotes.length === 2) {\r\n\t\t\t\tctx.handleSwap();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<li className={noteClass} onClick={()=>selectingHandler(props)} tabIndex=\"0\">\r\n\t\t\t\t<h3 className={css.title}> {props.title} </h3>\r\n\t\t\t\t<p className={css.text}>\t{props.text} </p>\r\n\t\t\t\t<div className={css.buttons}>\r\n\t\t\t\t\t<button className={css.button} onClick={() => editingHandler(props)}>Edit</button>\r\n\t\t\t\t\t<button className={css.button} onClick={() => ctx.deleteNote(props.id)}>Delete</button>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</li>\r\n\t\t</>\t\t\r\n\t)\r\n};\r\n\r\nexport default Note;","import React, { useContext } from 'react';\r\nimport Note from './Note';\r\n\r\nimport NoteContext from '../../store/note-context';\r\n\r\nimport css from './NotesList.module.css';\r\n\r\nconst NoteList = () => {\r\n\r\n\tconst ctx = useContext(NoteContext);\r\n\r\n\tconst notesList = ctx.dummyNotes.map((note)=> (\r\n\t\t<Note \r\n\t\t\tid={note.id} \r\n\t\t\tkey={note.id} \r\n\t\t\ttitle={note.title} \r\n\t\t\ttext={note.text}\r\n\t\t/>\r\n\t));\r\n\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<p className={css.tips}>* Click the Add Note button to create a new note. Click two notes to swap them! *</p>\r\n\t\t\t<div className={css.NotesList}>\r\n\t\t\t\t{notesList}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t\t);\r\n};\r\n\r\nexport default NoteList;","import React, { useContext } from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport classes from '../UI/Modal.module.css';\r\nimport NoteContext from '../store/note-context';\r\n\r\nconst Backdrop = props => {\r\n    return <div className={classes.backdrop} onClick={props.onClose} />\r\n};\r\nconst ModalOverlay = props => {\r\n    return <div className={classes.modal}>\r\n        <div className={classes.content}>{props.children}</div>\r\n    </div>\r\n};\r\n\r\nconst portalElement = document.getElementById('overlays');\r\n\r\nconst Modal = props => {\r\n    const ctx = useContext(NoteContext);\r\n    return (\r\n        <>\r\n            {ReactDOM.createPortal(<Backdrop onClose={ctx.editingNote ? ctx.hideEditingNote : ctx.hideNewNote} />, portalElement)}\r\n            {ReactDOM.createPortal(<ModalOverlay>{props.children}</ModalOverlay>,portalElement)}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;","import React, { useEffect, useContext } from 'react';\r\nimport NoteContext from '../../store/note-context';\r\nimport css from './NewOrEditForm.module.css';\r\n\r\nconst NewOrEditForm = props => {\r\n    const ctx = useContext(NoteContext);\r\n\r\n    useEffect(() =>{\r\n        ctx.updateEditingId(props.id);\r\n    }, [ctx, props.id])\r\n\r\n    return (\r\n        <>\r\n            <form className={css.form} onSubmit={ctx.noteSubmit} id=\"noteForm\">\r\n            <label>Title:    </label>\r\n            <input type=\"text\" \r\n                value={ctx.titleInput} \r\n                onChange={ctx.noteTitleChange}\r\n            />\r\n            <br />\r\n            <textarea \r\n                placeholder={!ctx.editingNote ? 'Enter a note... (upto 255 characters)' : null }\r\n                value={ctx.textInput} \r\n                onChange={ctx.noteTextChange}\r\n            />\r\n        </form>\r\n        <div className={css.buttons}>\r\n            <button className={css.button} onClick={ctx.editingNote ? ctx.hideEditingNote : ctx.hideNewNote}>Close</button>\r\n            <button className={css.button} type=\"submit\" value=\"submit\" form=\"noteForm\">Add</button>\r\n        </div>\r\n\r\n    </>\r\n    );\r\n};\r\nexport default NewOrEditForm;","import React  from 'react';\r\nimport Modal from '../../UI/Modal';\r\nimport NewOrEditForm from './NewOrEditForm';\r\n\r\nconst NewNote = (props) => {\r\n\r\n\treturn (\r\n        <Modal>\r\n            <NewOrEditForm id={props.id}/>\r\n        </Modal>\r\n\t);\r\n};\r\n\r\nexport default NewNote;","import React, { useContext } from 'react';\nimport Header from './Components/Header/Header';\nimport NotesList from './Components/Notes/NotesList';\nimport NewNote from './Components/Notes/NewNote';\nimport NoteContext from './store/note-context';\n\nconst App = () => {\n  const ctx = useContext(NoteContext);\n\n  const editingNote = ctx.currentEditNote;\n\n  return (\n    <>\n      {ctx.newNote && <NewNote />}\n      {ctx.editingNote && <NewNote id={editingNote.id} />}\n\n      <Header />\n      <NotesList />\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { NoteContextProvider } from './store/note-context';\n\nReactDOM.render(\n    <NoteContextProvider>\n        <App />\n    </NoteContextProvider >, \n    document.getElementById('root'));\n"],"sourceRoot":""}